 (1) Events.py: Using Panda to explore the data. 
 
~/Development/Misc-Projects/Code$ ./Events.py

     sessionId             artist  n_events
103        849       3 Doors Down         2
116        849  Frightened Rabbit         2

     sessionId             artist  n_events
71         692      Paulina Rubio         2
103        849       3 Doors Down         2
116        849  Frightened Rabbit         2
174        888         Jason Mraz         2
251        898              Train         2
289        910     Arctic Monkeys         2
297        910      Justin Bieber         2

(2) Events_withbuildinlib.py: Using buildin libraries, find list of every sessionId that features at least two events for the same artist.

Using dictionary to have sessionId, Artist as keys and number of events as values.

~/Development/Misc-Projects/Code$ ./Events_withbuildinlib.py 
{('888', 'Jason Mraz'): 2, ('692', 'Paulina Rubio'): 2, ('849', 'Frightened Rabbit'): 2, ('898', 'Train'): 2, ('910', 'Justin Bieber'): 2, ('849', '3 Doors Down'): 2, ('910', 'Arctic Monkeys'): 2}


(3) HelloWorldSpark.scala: Hello World using Apache Spark - 

~/Development/Misc-Projects/Code$ scalac -classpath "/opt/spark/jars/*" HelloWorldSpark.scala
~/Development/Misc-Projects/Code$ jar cf HelloWorldSpark.jar HelloWorldSpark*.class
~/Development/Misc-Projects/Code$ spark-submit --class HelloWorldSpark --master local[*] HelloWorldSpark.jar


Hello World - Using Apache Spark

